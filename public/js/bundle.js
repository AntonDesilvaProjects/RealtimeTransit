!function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";e.r(n);const r="https://shielded-sands-79374.herokuapp.com/transit/mta/subway/trips/list",i={groupBy:(t,n)=>t.reduce((t,e)=>{let r="function"==typeof n?n(e):e[n];return t.has(r)?t.get(r).push(e):t.set(r,[e]),t},new Map),isEmpty:t=>!t||0===t.length,isNotEmpty:t=>!i.isEmpty(t)};class s{constructor(t){this.id=t}}const o=t=>{if(i.isEmpty(t))return"<span>No route information available!</span>";const n=(t,n)=>{if(i.isEmpty(n))return"n/a";let e=n.map(t=>t.arrivingIn).sort((t,n)=>t-n),r=`${e[0]}(${e.slice(1,t).join(",")}) mins`;return r.replace("()",""),r};return`\n\t\t<table class="trip-grid">\n\t\t\t${t.map(t=>`\n\t\t\t\t\t\t<tr>\n\t\t\t\t             <td>\n\t\t\t\t                 <div class="route">\n\t\t\t\t                     <div class="route-name">${t.routeId}</div>\n\t\t\t\t                     <div class="route-trips">\n\t\t\t\t                         <div>\n\t\t\t\t                             <span>${t.north.destination}</span>\n\t\t\t\t                             <span class="time">${n(3,t.north.trips)}</span>\n\t\t\t\t                         </div>\n\t\t\t\t                         <div>\n\t\t\t\t                             <span>${t.south.destination}</span>\n\t\t\t\t                             <span class="time">${n(3,t.south.trips)}</span>\n\t\t\t\t                         </div>\n\t\t\t\t                     </div>\n\t\t\t\t                 </div>\n\t\t\t\t             </td>\n\t\t\t\t        </tr>\n\t\t\t\t\t`)}\n\t\t </table>\n\t`};var a=t=>{const n=`\n\t\t<div class="stop">\n\t    \t<div class="stop-info">\n\t            <div class="stop-name">\n\t                <span>${t.name}</span>\n\t            </div>\n\t            <div class="stop-updates">${o(t.routes)}</div>\n\t        </div>\n\t        <div class="additional-info">\n\t            <div>\n\t                F train - status: good\n\t            </div>\n\t            <div>\n\t                Additional Arrival Times\n\t            </div>\n\t        </div>\n\t    </div>`,e=document.querySelector(".search-results-tbody");if(e){e.insertRow().innerHTML="<td>"+n+"</td>"}};let p=new class{fetchTripUpdates(t){let n=new URLSearchParams({...t});return fetch(r+"?"+n).then(t=>t.json()).then(t=>t instanceof Array?t:Promise.reject(t))}mapTripToStops(t,n){let e=[];t.forEach(t=>{t.tripUpdates&&t.tripUpdates.filter(t=>!n||t.matchedSearch).forEach(n=>e.push({routeId:t.routeId,destination:t.destination,direction:t.direction,stopName:n.subwayStation.name,stopId:n.subwayStation.gtfsStopId,arrivalTime:n.arrivalTime,arrivingIn:Math.ceil(n.arrivingIn/6e4)}))});let r=i.groupBy(e,"stopId"),o=[];return r.forEach((t,n)=>{if(i.isNotEmpty(t)){let e=new s(n);e.name=t[0].stopName,e.routes=[],i.groupBy(t,"routeId").forEach((t,n)=>{const r=i.groupBy(t,"direction"),s=r.get("NORTH"),o=i.isEmpty(s)?null:s[0].destination,a=r.get("SOUTH"),p=i.isEmpty(a)?null:a[0].destination;e.routes.push({routeId:n,north:{trips:s,destination:o},south:{trips:a,destination:p}})}),o.push(e)}}),o}};p.fetchTripUpdates({stopIds:["F06","G07","D15"]}).then(t=>{(p.mapTripToStops(t,!0)||[]).forEach(a)},t=>console.log(t.message)),console.log(i.groupBy([{key:1,value:"a"},{key:1,value:"b"},{key:2,value:"b"}],t=>t.key)),console.log(i.isEmpty([1]))}]);